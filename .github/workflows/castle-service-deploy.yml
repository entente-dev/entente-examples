name: Castle Service - Deploy

on:
  workflow_run:
    workflows: ["Castle Service - Build & Test"]
    types:
      - completed
    branches: [main]
  workflow_dispatch:
    inputs:
      environment:
        description: "Environment to deploy to"
        required: true
        default: "development"
        type: choice
        options:
          - development
          - staging
          - production

jobs:
  deploy-development:
    if: (github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success') || (github.event_name == 'workflow_dispatch' && (github.event.inputs.environment == 'development' || github.event.inputs.environment == 'staging' || github.event.inputs.environment == 'production'))
    runs-on: ubuntu-latest
    environment: development

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "24"

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9.0.0

      - name: Install dependencies
        run: pnpm --filter castle-service install

      - name: Build
        env:
          ENTENTE_SERVICE_URL: ${{ vars.ENTENTE_SERVICE_URL }}
          ENTENTE_API_KEY: ${{ secrets.ENTENTE_API_KEY }}
        run: pnpm --filter castle-service build

      - name: Check deployment readiness
        env:
          ENTENTE_API_KEY: ${{ secrets.ENTENTE_API_KEY }}
        working-directory: examples/castle-service
        run: |
          VERSION=$(node -p "require('./package.json').version")
          npx entente can-i-deploy \
            --type provider \
            --service castle-service \
            --version $VERSION \
            --environment development

      - name: Deploy to Cloudflare Workers (Development)
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: deploy --name castle-service-dev --env development
          workingDirectory: examples/castle-service
        env:
          ENVIRONMENT: development

      - name: Record deployment
        env:
          ENTENTE_API_KEY: ${{ secrets.ENTENTE_API_KEY }}
        working-directory: examples/castle-service
        run: |
          VERSION=$(node -p "require('./package.json').version")
          npx entente deploy-service \
            --service castle-service \
            --version $VERSION \
            --environment development \
            --type provider

      - name: Run smoke tests
        run: |
          sleep 10
          curl -f https://castle-service-dev.${{ vars.CLOUDFLARE_WORKERS_SUBDOMAIN }}.workers.dev/health || exit 1

  deploy-staging:
    if: ((github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success') || (github.event_name == 'workflow_dispatch' && (github.event.inputs.environment == 'staging' || github.event.inputs.environment == 'production'))) && needs.deploy-development.result == 'success'
    needs: [deploy-development]
    runs-on: ubuntu-latest
    environment: staging

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "24"

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9.0.0

      - name: Install dependencies
        run: pnpm --filter castle-service install

      - name: Build
        env:
          ENTENTE_SERVICE_URL: ${{ vars.ENTENTE_SERVICE_URL }}
          ENTENTE_API_KEY: ${{ secrets.ENTENTE_API_KEY }}
        run: pnpm --filter castle-service build

      - name: Check deployment readiness
        env:
          ENTENTE_API_KEY: ${{ secrets.ENTENTE_API_KEY }}
        working-directory: examples/castle-service
        run: |
          VERSION=$(node -p "require('./package.json').version")
          npx entente can-i-deploy \
            --type provider \
            --service castle-service \
            --version $VERSION \
            --environment staging

      - name: Deploy to Cloudflare Workers (Staging)
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: deploy --name castle-service-staging --env staging
          workingDirectory: examples/castle-service
        env:
          ENVIRONMENT: staging

      - name: Record deployment
        env:
          ENTENTE_API_KEY: ${{ secrets.ENTENTE_API_KEY }}
        working-directory: examples/castle-service
        run: |
          VERSION=$(node -p "require('./package.json').version")
          npx entente deploy-service \
            --service castle-service \
            --version $VERSION \
            --environment staging \
            --type provider

      - name: Run smoke tests
        run: |
          sleep 10
          curl -f https://castle-service-staging.${{ vars.CLOUDFLARE_WORKERS_SUBDOMAIN }}.workers.dev/health || exit 1

  deploy-production:
    if: ((github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success') || (github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'production')) && needs.deploy-staging.result == 'success'
    needs: [deploy-staging]
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "24"

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9.0.0

      - name: Install dependencies
        run: pnpm --filter castle-service install

      - name: Build
        env:
          ENTENTE_SERVICE_URL: ${{ vars.ENTENTE_SERVICE_URL }}
          ENTENTE_API_KEY: ${{ secrets.ENTENTE_API_KEY }}
        run: pnpm --filter castle-service build

      - name: Check deployment readiness
        env:
          ENTENTE_API_KEY: ${{ secrets.ENTENTE_API_KEY }}
        working-directory: examples/castle-service
        run: |
          VERSION=$(node -p "require('./package.json').version")
          npx entente can-i-deploy \
            --type provider \
            --service castle-service \
            --version $VERSION \
            --environment production

      - name: Deploy to Cloudflare Workers (Production)
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: deploy --name castle-service --env production
          workingDirectory: examples/castle-service
        env:
          ENVIRONMENT: production

      - name: Record deployment
        env:
          ENTENTE_API_KEY: ${{ secrets.ENTENTE_API_KEY }}
        working-directory: examples/castle-service
        run: |
          VERSION=$(node -p "require('./package.json').version")
          npx entente deploy-service \
            --service castle-service \
            --version $VERSION \
            --environment production \
            --type provider

      - name: Run smoke tests
        run: |
          sleep 10
          curl -f https://castle-service.${{ vars.CLOUDFLARE_WORKERS_SUBDOMAIN }}.workers.dev/health || exit 1