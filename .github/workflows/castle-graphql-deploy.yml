name: Castle GraphQL - Deploy

on:
  push:
    paths:
      - "examples/castle-graphql/**"
      - ".github/workflows/castle-graphql-deploy.yml"
    branches: [main]

jobs:
  # Development deployment
  deploy-development:
    runs-on: ubuntu-latest
    environment: development
    defaults:
      run:
        working-directory: examples/castle-graphql

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "24"

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9.0.0

      - name: Install dependencies
        run: pnpm --filter castle-graphql install

      - name: Build for Worker
        run: pnpm --filter castle-graphql build:worker

      - name: Install Entente CLI
        run: npm install -g @entente/cli@latest

      - name: Check deployment readiness
        env:
          ENTENTE_API_KEY: ${{ secrets.ENTENTE_API_KEY }}
        working-directory: examples/castle-graphql
        run: |
          VERSION=$(node -p "require('./package.json').version")
          npx entente can-i-deploy \
            --type consumer \
            --service castle-graphql \
            --version $VERSION \
            --environment development

      - name: Deploy to Cloudflare Workers (Development)
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: deploy --name castle-graphql-dev --env development
          workingDirectory: examples/castle-graphql
        env:
          ENVIRONMENT: development

      - name: Record deployment
        env:
          ENTENTE_API_KEY: ${{ secrets.ENTENTE_API_KEY }}
        working-directory: examples/castle-client
        run: |
          VERSION=$(node -p "require('./package.json').version")
          npx entente deploy-service \
            --service castle-graphql \
            --version $VERSION \
            --environment development \
            --type provider

      - name: Run smoke tests
        run: |
          sleep 10
          curl -f https://castle-graphql-dev.${{ vars.CLOUDFLARE_WORKERS_SUBDOMAIN }}.workers.dev/health || exit 1

  # Staging deployment (after development succeeds)
  deploy-staging:
    needs: deploy-development
    runs-on: ubuntu-latest
    environment: staging
    defaults:
      run:
        working-directory: examples/castle-graphql

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "24"

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9.0.0

      - name: Install dependencies
        run: pnpm --filter castle-graphql install

      - name: Build for Worker
        run: pnpm --filter castle-graphql build:worker

      - name: Install Entente CLI
        run: npm install -g @entente/cli@latest

      - name: Check deployment readiness
        env:
          ENTENTE_API_KEY: ${{ secrets.ENTENTE_API_KEY }}
        working-directory: examples/castle-graphql
        run: |
          VERSION=$(node -p "require('./package.json').version")
          npx entente can-i-deploy \
            --type consumer \
            --service castle-graphql \
            --version $VERSION \
            --environment staging

      - name: Deploy to Cloudflare Workers (Development)
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: deploy --name castle-graphql-staging --env staging
          workingDirectory: examples/castle-graphql
        env:
          ENVIRONMENT: staging

      - name: Record deployment
        env:
          ENTENTE_API_KEY: ${{ secrets.ENTENTE_API_KEY }}
        working-directory: examples/castle-client
        run: |
          VERSION=$(node -p "require('./package.json').version")
          npx entente deploy-service \
            --service castle-graphql \
            --version $VERSION \
            --environment staging \
            --type provider

      - name: Run smoke tests
        run: |
          sleep 10
          curl -f https://castle-graphql-staging.${{ vars.CLOUDFLARE_WORKERS_SUBDOMAIN }}.workers.dev/health || exit 1

  # Production deployment (after staging succeeds)
  deploy-production:
    needs: deploy-staging
    runs-on: ubuntu-latest
    environment: production
    defaults:
      run:
        working-directory: examples/castle-graphql

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "24"

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9.0.0

      - name: Install dependencies
        run: pnpm --filter castle-graphql install

      - name: Build for Worker
        run: pnpm --filter castle-graphql build:worker

      - name: Install Entente CLI
        run: npm install -g @entente/cli@latest

      - name: Check deployment readiness
        env:
          ENTENTE_API_KEY: ${{ secrets.ENTENTE_API_KEY }}
        working-directory: examples/castle-graphql
        run: |
          VERSION=$(node -p "require('./package.json').version")
          npx entente can-i-deploy \
            --type consumer \
            --service castle-graphql \
            --version $VERSION \
            --environment production

      - name: Deploy to Cloudflare Workers (Development)
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: deploy --name castle-graphql-production --env production
          workingDirectory: examples/castle-graphql
        env:
          ENVIRONMENT: production

      - name: Record deployment
        env:
          ENTENTE_API_KEY: ${{ secrets.ENTENTE_API_KEY }}
        working-directory: examples/castle-client
        run: |
          VERSION=$(node -p "require('./package.json').version")
          npx entente deploy-service \
            --service castle-graphql \
            --version $VERSION \
            --environment production \
            --type provider

      - name: Run smoke tests
        run: |
          sleep 10
          curl -f https://castle-graphql-production.${{ vars.CLOUDFLARE_WORKERS_SUBDOMAIN }}.workers.dev/health || exit 1
